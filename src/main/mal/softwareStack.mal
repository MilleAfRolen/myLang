/*
 * Copyright 2020-2022 Foreseeti AB <https://foreseeti.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

category softwareStack {
  
  abstract asset OperativeSystem {
    | doStuff
    -> information.read,
    information.write,
    information.delete
  }


  abstract asset Information 
      user info: "Represents any information that could be stored inside data"
  {
    | read
    | write 
    | delete
    | deny
    | extract
  }

  abstract asset WebServer {
    | connect
    | authenticate
      -> user.
    | getRequest
      -> authenticate
    | handleRequest
      -> interpreter.processRequest

  }

  abstract asset Dbms {
    | insert
      -> database.insert
    | fetch
      -> database.fetch
    | update
      -> database.update
    | delete
      -> database.delete
  }

  abstract asset Database {
    | insert
    | fetch
    | update
    | delete
  }

  abstract asset Interpreter {
    | getRequest
      -> validateRequest

    | validateRequest



    | processRequest
      -> dbms
    | correctRequest
      -> dbms.request

    | error
  }
}

//Beh√∂vs denna ens?
category LampStack {
  asset Linux extends OperativeSystem {

  }

  asset Apache extends WebServer {

  }

  asset MySQL extends Dbms{

  }

  asset PHP extends Interpreter {

  }
}

category Resources {
    asset protectedResource extends Information {

    }
}


associations {
  OperativeSystem [os] 1 <-- runs --> 1 [webserver] WebServer
  OperativeSystem [os] 1 <-- blabla --> 1 [information] Information
  WebServer [webserver] 1 <-- executes --> * [interpreter] Interpreter
  Interpreter [interpreter] 1 <-- uses --> * [dbms] Dbms
  Dbms [dbms] 1 <-- queries --> * [database] Database
}
